name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, zip
    
    - name: Validate composer.json
      run: composer validate --strict
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Deploy to Hostinger
      run: |
        # Create SSH config file
        mkdir -p ~/.ssh
        echo "Host ${{ secrets.HOSTINGER_HOST }}
          HostName ${{ secrets.HOSTINGER_HOST }}
          Port 65002
          User ${{ secrets.HOSTINGER_USER }}
          StrictHostKeyChecking no" > ~/.ssh/config
        
        # Set proper permissions
        chmod 600 ~/.ssh/config
        
        # First do a dry run to see what would change
        echo "ðŸš€ Starting deployment dry run..."
        rsync -avz --dry-run -e "ssh -p 65002" --exclude '.git' --exclude '.github' --exclude 'vendor' --exclude 'node_modules' --exclude '.env' --exclude '.gitignore' --exclude 'README.md' ./ ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:${{ secrets.HOSTINGER_PATH }}
        
        # Ask for confirmation before actual deployment
        echo "ðŸ“‹ Dry run completed. Review the changes above."
        echo "âœ… If everything looks correct, the actual deployment will proceed."
        
        # Actual deployment
        echo "ðŸš€ Starting actual deployment..."
        rsync -avz -e "ssh -p 65002" --exclude '.git' --exclude '.github' --exclude 'vendor' --exclude 'node_modules' --exclude '.env' --exclude '.gitignore' --exclude 'README.md' ./ ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:${{ secrets.HOSTINGER_PATH }}
        echo "âœ… Deployment completed successfully!" 